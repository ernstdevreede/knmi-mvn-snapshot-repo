<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.betadriven</groupId>
  <artifactId>jackson-datatype-jts</artifactId>
  <version>2.6-SNAPSHOT</version>
  <name>Jackson-datatype-jts</name>
  <description>Add-on module for Jackson (http://jackson.codehaus.org) to support JTS geometry types using
    the GeoJSON standard.</description>
  <url>https://github.com/bedatadriven/jackson-datatype-jts/</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <developers>
    <developer>
      <name>Alex Bertram</name>
      <email>alex@bedatadriven.com</email>
      <organization>BeDataDriven</organization>
      <organizationUrl>https://bedatadriven.com</organizationUrl>
      <timezone>Europe/Amsterdam</timezone>
      <roles>
        <role>Maintainer</role>
      </roles>
    </developer>
  </developers>
  
  <scm>
    <connection>scm:git:git@github.com:bedatadriven/jackson-datatype-jts.git</connection>
    <url>scm:git:git@github.com:bedatadriven/jackson-datatype-jts.git</url>
    <developerConnection>scm:git:git@github.com:bedatadriven/jackson-datatype-jts.git</developerConnection>
    <tag>jackson-datatype-jts-2.0</tag>
  </scm>

  <distributionManagement>
<!--    <repository>
      <id>sonatype-ossrh</id>
      <name>Sonatype OSSRH</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>sonatype-ossrh-snapshots</id>
      <name>Sonatype OSSRH snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
-->
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- Github site plugin for Github mvn repo deployment -->
		<site-maven-plugin.version>0.12</site-maven-plugin.version>

		<!-- Most of these SHOULD NOT be overriden in child POMs -->
		<project.scm.id>github</project.scm.id>
		<github-repo-owner>ernstdevreede</github-repo-owner>
		<github.global.server>github</github.global.server>
		<github-mvn-release-repo>knmi-mvn-repo</github-mvn-release-repo>
		<github-mvn-snapshot-repo>knmi-mvn-snapshot-repo</github-mvn-snapshot-repo>
		<scm-url>scm:https://github.com/${github-repo-owner}/${project.artifactId}.git/</scm-url>
		<scm-web-url>https://github.com/${github-repo-owner}/${project.artifactId}</scm-web-url>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>1.15.0</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.5.201505241946</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <!--  implementation is needed only for Maven 2  -->
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <!--  implementation is needed only for Maven 2  -->
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>COMPLEXITY</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>0.60</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>${site-maven-plugin.version}</version>
			</plugin>

    </plugins>

  </build>

  <profiles>
		<profile>
			<id>snapshot</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.github.github</groupId>
							<artifactId>site-maven-plugin</artifactId>
							<version>${site-maven-plugin.version}</version>
							<configuration>
								<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
								<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
								<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
								<branch>refs/heads/master</branch>                       <!-- remote branch name -->
								<includes>
									<include>**/*</include>
								</includes>
								<repositoryName>${github-mvn-snapshot-repo}</repositoryName>      <!-- github repo name -->
								<repositoryOwner>${github-repo-owner}</repositoryOwner>    <!-- github username -->
								<merge>true</merge>
							</configuration>
							<executions>
								<!-- run site-maven-plugin's 'site' target as part of the build's 
									normal 'deploy' phase -->
								<execution>
									<goals>
										<goal>site</goal>
									</goals>
									<phase>deploy</phase>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
						<version>${site-maven-plugin.version}</version>
						<configuration>
							<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
							<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
							<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
							<branch>refs/heads/master</branch>                       <!-- remote branch name -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryName>${github-mvn-release-repo}</repositoryName>      <!-- github repo name -->
							<repositoryOwner>${github-repo-owner}</repositoryOwner>    <!-- github username -->
							<merge>true</merge>
						</configuration>
						<executions>
							<!-- run site-maven-plugin's 'site' target as part of the build's 
								normal 'release' phase -->
							<execution>
								<goals>
									<goal>site</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kohsuke</groupId>
            <artifactId>pgp-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <secretkey>keyfile:${env.PGP_SECRETKEY_FILE}</secretkey>
                  <passphrase>literal:notasecret</passphrase>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
